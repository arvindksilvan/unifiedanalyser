<org.apache.cordova.Whitelist: void addWhiteListEntry(java.lang.String,boolean)>(java.lang.String, boolean)
<org.apache.cordova.Whitelist: boolean isUrlWhiteListed(java.lang.String)>(java.lang.String)
<org.apache.cordova.CordovaArgs: void <init>(org.json.JSONArray)>(org.json.JSONArray)
<org.apache.cordova.CordovaArgs: java.lang.Object get(int)>(int)
<org.apache.cordova.CordovaArgs: byte[] getArrayBuffer(int)>(int)
<org.apache.cordova.CordovaArgs: boolean getBoolean(int)>(int)
<org.apache.cordova.CordovaArgs: double getDouble(int)>(int)
<org.apache.cordova.CordovaArgs: int getInt(int)>(int)
<org.apache.cordova.CordovaArgs: org.json.JSONArray getJSONArray(int)>(int)
<org.apache.cordova.CordovaArgs: org.json.JSONObject getJSONObject(int)>(int)
<org.apache.cordova.CordovaArgs: long getLong(int)>(int)
<org.apache.cordova.CordovaArgs: java.lang.String getString(int)>(int)
<org.apache.cordova.CordovaArgs: boolean isNull(int)>(int)
<org.apache.cordova.CordovaArgs: java.lang.Object opt(int)>(int)
<org.apache.cordova.CordovaArgs: boolean optBoolean(int)>(int)
<org.apache.cordova.CordovaArgs: double optDouble(int)>(int)
<org.apache.cordova.CordovaArgs: int optInt(int)>(int)
<org.apache.cordova.CordovaArgs: org.json.JSONArray optJSONArray(int)>(int)
<org.apache.cordova.CordovaArgs: org.json.JSONObject optJSONObject(int)>(int)
<org.apache.cordova.CordovaArgs: long optLong(int)>(int)
<org.apache.cordova.CordovaArgs: java.lang.String optString(int)>(int)
<org.apache.cordova.ExposedJsApi: java.lang.String exec(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
<org.apache.cordova.ExposedJsApi: java.lang.String retrieveJsMessages(int,boolean)>(int, boolean)
<org.apache.cordova.ExposedJsApi: void setNativeToJsBridgeMode(int,int)>(int, int)
<org.apache.cordova.CordovaWebViewEngine: void evaluateJavascript(java.lang.String,android.webkit.ValueCallback)>(java.lang.String, android.webkit.ValueCallback)
<org.apache.cordova.CordovaWebViewEngine: void loadUrl(java.lang.String,boolean)>(java.lang.String, boolean)
<org.apache.cordova.CordovaWebViewEngine: void setPaused(boolean)>(boolean)
<org.apache.cordova.CallbackContext: void <init>(java.lang.String,org.apache.cordova.CordovaWebView)>(java.lang.String, org.apache.cordova.CordovaWebView)
<org.apache.cordova.CallbackContext: void error(int)>(int)
<org.apache.cordova.CallbackContext: void error(java.lang.String)>(java.lang.String)
<org.apache.cordova.CallbackContext: void error(org.json.JSONObject)>(org.json.JSONObject)
<org.apache.cordova.CallbackContext: void sendPluginResult(org.apache.cordova.PluginResult)>(org.apache.cordova.PluginResult)
<org.apache.cordova.CallbackContext: void success(int)>(int)
<org.apache.cordova.CallbackContext: void success(java.lang.String)>(java.lang.String)
<org.apache.cordova.CallbackContext: void success(org.json.JSONArray)>(org.json.JSONArray)
<org.apache.cordova.CallbackContext: void success(org.json.JSONObject)>(org.json.JSONObject)
<org.apache.cordova.CallbackContext: void success(byte[])>(byte())
<org.apache.cordova.engine.SystemWebChromeClient: void <init>(org.apache.cordova.engine.SystemWebViewEngine)>(org.apache.cordova.engine.SystemWebViewEngine)
<org.apache.cordova.engine.SystemWebChromeClient: void onConsoleMessage(java.lang.String,int,java.lang.String)>(java.lang.String, int, java.lang.String)
<org.apache.cordova.engine.SystemWebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>(android.webkit.ConsoleMessage)
<org.apache.cordova.engine.SystemWebChromeClient: boolean onJsAlert(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult)>(android.webkit.WebView, java.lang.String, java.lang.String, android.webkit.JsResult)
<org.apache.cordova.engine.SystemWebChromeClient: boolean onJsConfirm(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult)>(android.webkit.WebView, java.lang.String, java.lang.String, android.webkit.JsResult)
<org.apache.cordova.engine.SystemWebChromeClient: boolean onJsPrompt(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsPromptResult)>(android.webkit.WebView, java.lang.String, java.lang.String, java.lang.String, android.webkit.JsPromptResult)
<org.apache.cordova.engine.SystemWebChromeClient: void onPermissionRequest(android.webkit.PermissionRequest)>(android.webkit.PermissionRequest)
<org.apache.cordova.engine.SystemWebChromeClient: void openFileChooser(android.webkit.ValueCallback)>(android.webkit.ValueCallback)
<org.apache.cordova.engine.SystemWebChromeClient: void openFileChooser(android.webkit.ValueCallback,java.lang.String)>(android.webkit.ValueCallback, java.lang.String)
<org.apache.cordova.engine.SystemWebChromeClient: void openFileChooser(android.webkit.ValueCallback,java.lang.String,java.lang.String)>(android.webkit.ValueCallback, java.lang.String, java.lang.String)
<org.apache.cordova.engine.SystemExposedJsApi: void <init>(org.apache.cordova.CordovaBridge)>(org.apache.cordova.CordovaBridge)
<org.apache.cordova.engine.SystemExposedJsApi: java.lang.String exec(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
<org.apache.cordova.engine.SystemExposedJsApi: java.lang.String retrieveJsMessages(int,boolean)>(int, boolean)
<org.apache.cordova.engine.SystemExposedJsApi: void setNativeToJsBridgeMode(int,int)>(int, int)
<org.apache.cordova.CordovaBridge: void <init>(org.apache.cordova.PluginManager,org.apache.cordova.NativeToJsMessageQueue)>(org.apache.cordova.PluginManager, org.apache.cordova.NativeToJsMessageQueue)
<org.apache.cordova.CordovaBridge: boolean verifySecret(java.lang.String,int)>(java.lang.String, int)
<org.apache.cordova.CordovaBridge: java.lang.String jsExec(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
<org.apache.cordova.CordovaBridge: java.lang.String jsRetrieveJsMessages(int,boolean)>(int, boolean)
<org.apache.cordova.CordovaBridge: void jsSetNativeToJsBridgeMode(int,int)>(int, int)
<org.apache.cordova.CordovaBridge: java.lang.String promptOnJsPrompt(java.lang.String,java.lang.String,java.lang.String)>(java.lang.String, java.lang.String, java.lang.String)
<org.apache.cordova.LOG: void d(java.lang.String,java.lang.String)>(java.lang.String, java.lang.String)
<org.apache.cordova.LOG: void d(java.lang.String,java.lang.String,java.lang.Throwable)>(java.lang.String, java.lang.String, java.lang.Throwable)
<org.apache.cordova.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>(java.lang.String, java.lang.String, java.lang.Object())
<org.apache.cordova.LOG: void e(java.lang.String,java.lang.String)>(java.lang.String, java.lang.String)
<org.apache.cordova.LOG: void e(java.lang.String,java.lang.String,java.lang.Throwable)>(java.lang.String, java.lang.String, java.lang.Throwable)
<org.apache.cordova.LOG: void e(java.lang.String,java.lang.String,java.lang.Object[])>(java.lang.String, java.lang.String, java.lang.Object())
<org.apache.cordova.LOG: void i(java.lang.String,java.lang.String)>(java.lang.String, java.lang.String)
<org.apache.cordova.LOG: void i(java.lang.String,java.lang.String,java.lang.Throwable)>(java.lang.String, java.lang.String, java.lang.Throwable)
<org.apache.cordova.LOG: void i(java.lang.String,java.lang.String,java.lang.Object[])>(java.lang.String, java.lang.String, java.lang.Object())
<org.apache.cordova.LOG: boolean isLoggable(int)>(int)
<org.apache.cordova.LOG: void setLogLevel(int)>(int)
<org.apache.cordova.LOG: void setLogLevel(java.lang.String)>(java.lang.String)
<org.apache.cordova.LOG: void v(java.lang.String,java.lang.String)>(java.lang.String, java.lang.String)
<org.apache.cordova.LOG: void v(java.lang.String,java.lang.String,java.lang.Throwable)>(java.lang.String, java.lang.String, java.lang.Throwable)
<org.apache.cordova.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>(java.lang.String, java.lang.String, java.lang.Object())
<org.apache.cordova.LOG: void w(java.lang.String,java.lang.String)>(java.lang.String, java.lang.String)
<org.apache.cordova.LOG: void w(java.lang.String,java.lang.String,java.lang.Throwable)>(java.lang.String, java.lang.String, java.lang.Throwable)
<org.apache.cordova.LOG: void w(java.lang.String,java.lang.String,java.lang.Object[])>(java.lang.String, java.lang.String, java.lang.Object())
<org.apache.cordova.LOG: void w(java.lang.String,java.lang.Throwable)>(java.lang.String, java.lang.Throwable)
<com.plugin.IMEI.IMEIPlugin: boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.CallbackContext)>(java.lang.String, org.json.JSONArray, org.apache.cordova.CallbackContext)
<org.apache.cordova.engine.SystemWebViewEngine: void <init>(android.content.Context,org.apache.cordova.CordovaPreferences)>(android.content.Context, org.apache.cordova.CordovaPreferences)
<org.apache.cordova.engine.SystemWebViewEngine: void <init>(org.apache.cordova.engine.SystemWebView)>(org.apache.cordova.engine.SystemWebView)
<org.apache.cordova.engine.SystemWebViewEngine: void <init>(org.apache.cordova.engine.SystemWebView,org.apache.cordova.CordovaPreferences)>(org.apache.cordova.engine.SystemWebView, org.apache.cordova.CordovaPreferences)
<org.apache.cordova.engine.SystemWebViewEngine: void exposeJsInterface(android.webkit.WebView,org.apache.cordova.CordovaBridge)>(android.webkit.WebView, org.apache.cordova.CordovaBridge)
<org.apache.cordova.engine.SystemWebViewEngine: void evaluateJavascript(java.lang.String,android.webkit.ValueCallback)>(java.lang.String, android.webkit.ValueCallback)
<org.apache.cordova.engine.SystemWebViewEngine: void loadUrl(java.lang.String,boolean)>(java.lang.String, boolean)
<org.apache.cordova.engine.SystemWebViewEngine: void setPaused(boolean)>(boolean)
<org.apache.cordova.engine.SystemWebViewClient: void <init>(org.apache.cordova.engine.SystemWebViewEngine)>(org.apache.cordova.engine.SystemWebViewEngine)
<org.apache.cordova.engine.SystemWebViewClient: boolean needsKitKatContentUrlFix(android.net.Uri)>(android.net.Uri)
<org.apache.cordova.engine.SystemWebViewClient: boolean needsSpecialsInAssetUrlFix(android.net.Uri)>(android.net.Uri)
<org.apache.cordova.engine.SystemWebViewClient: org.apache.cordova.AuthenticationToken getAuthenticationToken(java.lang.String,java.lang.String)>(java.lang.String, java.lang.String)
<org.apache.cordova.engine.SystemWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)>(android.webkit.WebView, java.lang.String)
<org.apache.cordova.engine.SystemWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)>(android.webkit.WebView, java.lang.String, android.graphics.Bitmap)
<org.apache.cordova.engine.SystemWebViewClient: void onReceivedClientCertRequest(android.webkit.WebView,android.webkit.ClientCertRequest)>(android.webkit.WebView, android.webkit.ClientCertRequest)
<org.apache.cordova.engine.SystemWebViewClient: void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String)>(android.webkit.WebView, int, java.lang.String, java.lang.String)
<org.apache.cordova.engine.SystemWebViewClient: void onReceivedHttpAuthRequest(android.webkit.WebView,android.webkit.HttpAuthHandler,java.lang.String,java.lang.String)>(android.webkit.WebView, android.webkit.HttpAuthHandler, java.lang.String, java.lang.String)
<org.apache.cordova.engine.SystemWebViewClient: void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError)>(android.webkit.WebView, android.webkit.SslErrorHandler, android.net.http.SslError)
<org.apache.cordova.engine.SystemWebViewClient: org.apache.cordova.AuthenticationToken removeAuthenticationToken(java.lang.String,java.lang.String)>(java.lang.String, java.lang.String)
<org.apache.cordova.engine.SystemWebViewClient: void setAuthenticationToken(org.apache.cordova.AuthenticationToken,java.lang.String,java.lang.String)>(org.apache.cordova.AuthenticationToken, java.lang.String, java.lang.String)
<org.apache.cordova.engine.SystemWebViewClient: android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebView,java.lang.String)>(android.webkit.WebView, java.lang.String)
<org.apache.cordova.engine.SystemWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)>(android.webkit.WebView, java.lang.String)
<org.apache.cordova.engine.SystemCookieManager: void <init>(android.webkit.WebView)>(android.webkit.WebView)
<org.apache.cordova.engine.SystemCookieManager: java.lang.String getCookie(java.lang.String)>(java.lang.String)
<org.apache.cordova.engine.SystemCookieManager: void setCookie(java.lang.String,java.lang.String)>(java.lang.String, java.lang.String)
<org.apache.cordova.engine.SystemCookieManager: void setCookiesEnabled(boolean)>(boolean)
<io.cordova.hellocordova.MainActivity: void onCreate(android.os.Bundle)>(android.os.Bundle)
<org.apache.cordova.device.Device: boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.CallbackContext)>(java.lang.String, org.json.JSONArray, org.apache.cordova.CallbackContext)
<org.apache.cordova.device.Device: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)>(org.apache.cordova.CordovaInterface, org.apache.cordova.CordovaWebView)
<org.apache.cordova.CordovaPlugin: boolean execute(java.lang.String,java.lang.String,org.apache.cordova.CallbackContext)>(java.lang.String, java.lang.String, org.apache.cordova.CallbackContext)
<org.apache.cordova.CordovaPlugin: boolean execute(java.lang.String,org.apache.cordova.CordovaArgs,org.apache.cordova.CallbackContext)>(java.lang.String, org.apache.cordova.CordovaArgs, org.apache.cordova.CallbackContext)
<org.apache.cordova.CordovaPlugin: boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.CallbackContext)>(java.lang.String, org.json.JSONArray, org.apache.cordova.CallbackContext)
<org.apache.cordova.CordovaPlugin: android.net.Uri fromPluginUri(android.net.Uri)>(android.net.Uri)
<org.apache.cordova.CordovaPlugin: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)>(org.apache.cordova.CordovaInterface, org.apache.cordova.CordovaWebView)
<org.apache.cordova.CordovaPlugin: void onActivityResult(int,int,android.content.Intent)>(int, int, android.content.Intent)
<org.apache.cordova.CordovaPlugin: void onConfigurationChanged(android.content.res.Configuration)>(android.content.res.Configuration)
<org.apache.cordova.CordovaPlugin: java.lang.Object onMessage(java.lang.String,java.lang.Object)>(java.lang.String, java.lang.Object)
<org.apache.cordova.CordovaPlugin: void onNewIntent(android.content.Intent)>(android.content.Intent)
<org.apache.cordova.CordovaPlugin: boolean onOverrideUrlLoading(java.lang.String)>(java.lang.String)
<org.apache.cordova.CordovaPlugin: void onPause(boolean)>(boolean)
<org.apache.cordova.CordovaPlugin: boolean onReceivedClientCertRequest(org.apache.cordova.CordovaWebView,org.apache.cordova.ICordovaClientCertRequest)>(org.apache.cordova.CordovaWebView, org.apache.cordova.ICordovaClientCertRequest)
<org.apache.cordova.CordovaPlugin: boolean onReceivedHttpAuthRequest(org.apache.cordova.CordovaWebView,org.apache.cordova.ICordovaHttpAuthHandler,java.lang.String,java.lang.String)>(org.apache.cordova.CordovaWebView, org.apache.cordova.ICordovaHttpAuthHandler, java.lang.String, java.lang.String)
<org.apache.cordova.CordovaPlugin: void onRequestPermissionResult(int,java.lang.String[],int[])>(int, java.lang.String(), int())
<org.apache.cordova.CordovaPlugin: void onRestoreStateForActivityResult(android.os.Bundle,org.apache.cordova.CallbackContext)>(android.os.Bundle, org.apache.cordova.CallbackContext)
<org.apache.cordova.CordovaPlugin: void onResume(boolean)>(boolean)
<org.apache.cordova.CordovaPlugin: void privateInitialize(java.lang.String,org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaPreferences)>(java.lang.String, org.apache.cordova.CordovaInterface, org.apache.cordova.CordovaWebView, org.apache.cordova.CordovaPreferences)
<org.apache.cordova.CordovaPlugin: android.net.Uri remapUri(android.net.Uri)>(android.net.Uri)
<org.apache.cordova.CordovaPlugin: void requestPermissions(int)>(int)
<org.apache.cordova.CordovaPlugin: java.lang.Boolean shouldAllowBridgeAccess(java.lang.String)>(java.lang.String)
<org.apache.cordova.CordovaPlugin: java.lang.Boolean shouldAllowNavigation(java.lang.String)>(java.lang.String)
<org.apache.cordova.CordovaPlugin: java.lang.Boolean shouldAllowRequest(java.lang.String)>(java.lang.String)
<org.apache.cordova.CordovaPlugin: java.lang.Boolean shouldOpenExternalUrl(java.lang.String)>(java.lang.String)
<org.apache.cordova.CordovaPlugin: android.net.Uri toPluginUri(android.net.Uri)>(android.net.Uri)
<org.apache.cordova.CordovaActivity: void displayError(java.lang.String,java.lang.String,java.lang.String,boolean)>(java.lang.String, java.lang.String, java.lang.String, boolean)
<org.apache.cordova.CordovaActivity: void loadUrl(java.lang.String)>(java.lang.String)
<org.apache.cordova.CordovaActivity: void onActivityResult(int,int,android.content.Intent)>(int, int, android.content.Intent)
<org.apache.cordova.CordovaActivity: void onConfigurationChanged(android.content.res.Configuration)>(android.content.res.Configuration)
<org.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)>(android.os.Bundle)
<org.apache.cordova.CordovaActivity: boolean onCreateOptionsMenu(android.view.Menu)>(android.view.Menu)
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>(java.lang.String, java.lang.Object)
<org.apache.cordova.CordovaActivity: void onNewIntent(android.content.Intent)>(android.content.Intent)
<org.apache.cordova.CordovaActivity: boolean onOptionsItemSelected(android.view.MenuItem)>(android.view.MenuItem)
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)>(android.view.Menu)
<org.apache.cordova.CordovaActivity: void onReceivedError(int,java.lang.String,java.lang.String)>(int, java.lang.String, java.lang.String)
<org.apache.cordova.CordovaActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>(int, java.lang.String(), int())
<org.apache.cordova.CordovaActivity: void onSaveInstanceState(android.os.Bundle)>(android.os.Bundle)
<org.apache.cordova.CordovaActivity: void onWindowFocusChanged(boolean)>(boolean)
<org.apache.cordova.CordovaActivity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)>(android.content.Intent, int, android.os.Bundle)
<org.apache.cordova.engine.SystemWebView: void <init>(android.content.Context)>(android.content.Context)
<org.apache.cordova.engine.SystemWebView: void <init>(android.content.Context,android.util.AttributeSet)>(android.content.Context, android.util.AttributeSet)
<org.apache.cordova.engine.SystemWebView: boolean dispatchKeyEvent(android.view.KeyEvent)>(android.view.KeyEvent)
<org.apache.cordova.engine.SystemWebView: void init(org.apache.cordova.engine.SystemWebViewEngine,org.apache.cordova.CordovaInterface)>(org.apache.cordova.engine.SystemWebViewEngine, org.apache.cordova.CordovaInterface)
<org.apache.cordova.engine.SystemWebView: void setWebChromeClient(android.webkit.WebChromeClient)>(android.webkit.WebChromeClient)
<org.apache.cordova.engine.SystemWebView: void setWebViewClient(android.webkit.WebViewClient)>(android.webkit.WebViewClient)
<com.cordova.plugins.sms.Sms: void invokeSMSIntent(java.lang.String,java.lang.String)>(java.lang.String, java.lang.String)
<com.cordova.plugins.sms.Sms: void send(org.apache.cordova.CallbackContext,java.lang.String,java.lang.String)>(org.apache.cordova.CallbackContext, java.lang.String, java.lang.String)
<com.cordova.plugins.sms.Sms: boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.CallbackContext)>(java.lang.String, org.json.JSONArray, org.apache.cordova.CallbackContext)
<com.cordova.plugins.sms.Sms: void onRequestPermissionResult(int,java.lang.String[],int[])>(int, java.lang.String(), int())
<com.joandilee.imeiplugin: void getImei(java.lang.String,org.apache.cordova.CallbackContext)>(java.lang.String, org.apache.cordova.CallbackContext)
<com.joandilee.imeiplugin: void DeviceImeiNumber(org.apache.cordova.CallbackContext)>(org.apache.cordova.CallbackContext)
<com.joandilee.imeiplugin: boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.CallbackContext)>(java.lang.String, org.json.JSONArray, org.apache.cordova.CallbackContext)
<org.apache.cordova.CordovaWebView: void clearCache(boolean)>(boolean)
<org.apache.cordova.CordovaWebView: void handlePause(boolean)>(boolean)
<org.apache.cordova.CordovaWebView: void handleResume(boolean)>(boolean)
<org.apache.cordova.CordovaWebView: void init(org.apache.cordova.CordovaInterface,java.util.List,org.apache.cordova.CordovaPreferences)>(org.apache.cordova.CordovaInterface, java.util.List, org.apache.cordova.CordovaPreferences)
<org.apache.cordova.CordovaWebView: boolean isButtonPlumbedToJs(int)>(int)
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>(java.lang.String)
<org.apache.cordova.CordovaWebView: void loadUrlIntoView(java.lang.String,boolean)>(java.lang.String, boolean)
<org.apache.cordova.CordovaWebView: void onNewIntent(android.content.Intent)>(android.content.Intent)
<org.apache.cordova.CordovaWebView: java.lang.Object postMessage(java.lang.String,java.lang.Object)>(java.lang.String, java.lang.Object)
<org.apache.cordova.CordovaWebView: void sendJavascript(java.lang.String)>(java.lang.String)
<org.apache.cordova.CordovaWebView: void sendPluginResult(org.apache.cordova.PluginResult,java.lang.String)>(org.apache.cordova.PluginResult, java.lang.String)
<org.apache.cordova.CordovaWebView: void setButtonPlumbedToJs(int,boolean)>(int, boolean)
<org.apache.cordova.CordovaWebView: void showWebPage(java.lang.String,boolean,boolean,java.util.Map)>(java.lang.String, boolean, boolean, java.util.Map)
<org.apache.cordova.ICordovaCookieManager: java.lang.String getCookie(java.lang.String)>(java.lang.String)
<org.apache.cordova.ICordovaCookieManager: void setCookie(java.lang.String,java.lang.String)>(java.lang.String, java.lang.String)
<org.apache.cordova.ICordovaCookieManager: void setCookiesEnabled(boolean)>(boolean)
<org.apache.cordova.whitelist.WhitelistPlugin: void <init>(android.content.Context)>(android.content.Context)
<org.apache.cordova.whitelist.WhitelistPlugin: void <init>(org.apache.cordova.Whitelist,org.apache.cordova.Whitelist,org.apache.cordova.Whitelist)>(org.apache.cordova.Whitelist, org.apache.cordova.Whitelist, org.apache.cordova.Whitelist)
<org.apache.cordova.whitelist.WhitelistPlugin: void <init>(org.xmlpull.v1.XmlPullParser)>(org.xmlpull.v1.XmlPullParser)
<org.apache.cordova.whitelist.WhitelistPlugin: void setAllowedIntents(org.apache.cordova.Whitelist)>(org.apache.cordova.Whitelist)
<org.apache.cordova.whitelist.WhitelistPlugin: void setAllowedNavigations(org.apache.cordova.Whitelist)>(org.apache.cordova.Whitelist)
<org.apache.cordova.whitelist.WhitelistPlugin: void setAllowedRequests(org.apache.cordova.Whitelist)>(org.apache.cordova.Whitelist)
<org.apache.cordova.whitelist.WhitelistPlugin: java.lang.Boolean shouldAllowNavigation(java.lang.String)>(java.lang.String)
<org.apache.cordova.whitelist.WhitelistPlugin: java.lang.Boolean shouldAllowRequest(java.lang.String)>(java.lang.String)
<org.apache.cordova.whitelist.WhitelistPlugin: java.lang.Boolean shouldOpenExternalUrl(java.lang.String)>(java.lang.String)
<org.apache.cordova.CordovaInterface: boolean hasPermission(java.lang.String)>(java.lang.String)
<org.apache.cordova.CordovaInterface: java.lang.Object onMessage(java.lang.String,java.lang.Object)>(java.lang.String, java.lang.Object)
<org.apache.cordova.CordovaInterface: void requestPermission(org.apache.cordova.CordovaPlugin,int,java.lang.String)>(org.apache.cordova.CordovaPlugin, int, java.lang.String)
<org.apache.cordova.CordovaInterface: void requestPermissions(org.apache.cordova.CordovaPlugin,int,java.lang.String[])>(org.apache.cordova.CordovaPlugin, int, java.lang.String())
<org.apache.cordova.CordovaInterface: void setActivityResultCallback(org.apache.cordova.CordovaPlugin)>(org.apache.cordova.CordovaPlugin)
<org.apache.cordova.CordovaInterface: void startActivityForResult(org.apache.cordova.CordovaPlugin,android.content.Intent,int)>(org.apache.cordova.CordovaPlugin, android.content.Intent, int)
<org.apache.cordova.CordovaWebViewImpl: void <init>(org.apache.cordova.CordovaWebViewEngine)>(org.apache.cordova.CordovaWebViewEngine)
<org.apache.cordova.CordovaWebViewImpl: org.apache.cordova.CordovaWebViewEngine createEngine(android.content.Context,org.apache.cordova.CordovaPreferences)>(android.content.Context, org.apache.cordova.CordovaPreferences)
<org.apache.cordova.CordovaWebViewImpl: void sendJavascriptEvent(java.lang.String)>(java.lang.String)
<org.apache.cordova.CordovaWebViewImpl: void clearCache(boolean)>(boolean)
<org.apache.cordova.CordovaWebViewImpl: void handlePause(boolean)>(boolean)
<org.apache.cordova.CordovaWebViewImpl: void handleResume(boolean)>(boolean)
<org.apache.cordova.CordovaWebViewImpl: void init(org.apache.cordova.CordovaInterface)>(org.apache.cordova.CordovaInterface)
<org.apache.cordova.CordovaWebViewImpl: void init(org.apache.cordova.CordovaInterface,java.util.List,org.apache.cordova.CordovaPreferences)>(org.apache.cordova.CordovaInterface, java.util.List, org.apache.cordova.CordovaPreferences)
<org.apache.cordova.CordovaWebViewImpl: boolean isButtonPlumbedToJs(int)>(int)
<org.apache.cordova.CordovaWebViewImpl: void loadUrl(java.lang.String)>(java.lang.String)
<org.apache.cordova.CordovaWebViewImpl: void loadUrlIntoView(java.lang.String,boolean)>(java.lang.String, boolean)
<org.apache.cordova.CordovaWebViewImpl: void onNewIntent(android.content.Intent)>(android.content.Intent)
<org.apache.cordova.CordovaWebViewImpl: java.lang.Object postMessage(java.lang.String,java.lang.Object)>(java.lang.String, java.lang.Object)
<org.apache.cordova.CordovaWebViewImpl: void sendJavascript(java.lang.String)>(java.lang.String)
<org.apache.cordova.CordovaWebViewImpl: void sendPluginResult(org.apache.cordova.PluginResult,java.lang.String)>(org.apache.cordova.PluginResult, java.lang.String)
<org.apache.cordova.CordovaWebViewImpl: void setButtonPlumbedToJs(int,boolean)>(int, boolean)
<org.apache.cordova.CordovaWebViewImpl: void showWebPage(java.lang.String,boolean,boolean,java.util.Map)>(java.lang.String, boolean, boolean, java.util.Map)
<org.apache.cordova.CordovaHttpAuthHandler: void <init>(android.webkit.HttpAuthHandler)>(android.webkit.HttpAuthHandler)
<org.apache.cordova.CordovaHttpAuthHandler: void proceed(java.lang.String,java.lang.String)>(java.lang.String, java.lang.String)
<org.apache.cordova.PluginManager: void <init>(org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaInterface,java.util.Collection)>(org.apache.cordova.CordovaWebView, org.apache.cordova.CordovaInterface, java.util.Collection)
<org.apache.cordova.PluginManager: org.apache.cordova.CordovaPlugin instantiatePlugin(java.lang.String)>(java.lang.String)
<org.apache.cordova.PluginManager: void addService(java.lang.String,java.lang.String)>(java.lang.String, java.lang.String)
<org.apache.cordova.PluginManager: void addService(org.apache.cordova.PluginEntry)>(org.apache.cordova.PluginEntry)
<org.apache.cordova.PluginManager: void exec(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
<org.apache.cordova.PluginManager: org.apache.cordova.CordovaPlugin getPlugin(java.lang.String)>(java.lang.String)
<org.apache.cordova.PluginManager: void onConfigurationChanged(android.content.res.Configuration)>(android.content.res.Configuration)
<org.apache.cordova.PluginManager: void onNewIntent(android.content.Intent)>(android.content.Intent)
<org.apache.cordova.PluginManager: boolean onOverrideUrlLoading(java.lang.String)>(java.lang.String)
<org.apache.cordova.PluginManager: void onPause(boolean)>(boolean)
<org.apache.cordova.PluginManager: boolean onReceivedClientCertRequest(org.apache.cordova.CordovaWebView,org.apache.cordova.ICordovaClientCertRequest)>(org.apache.cordova.CordovaWebView, org.apache.cordova.ICordovaClientCertRequest)
<org.apache.cordova.PluginManager: boolean onReceivedHttpAuthRequest(org.apache.cordova.CordovaWebView,org.apache.cordova.ICordovaHttpAuthHandler,java.lang.String,java.lang.String)>(org.apache.cordova.CordovaWebView, org.apache.cordova.ICordovaHttpAuthHandler, java.lang.String, java.lang.String)
<org.apache.cordova.PluginManager: void onResume(boolean)>(boolean)
<org.apache.cordova.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>(java.lang.String, java.lang.Object)
<org.apache.cordova.PluginManager: android.net.Uri remapUri(android.net.Uri)>(android.net.Uri)
<org.apache.cordova.PluginManager: void setPluginEntries(java.util.Collection)>(java.util.Collection)
<org.apache.cordova.PluginManager: boolean shouldAllowBridgeAccess(java.lang.String)>(java.lang.String)
<org.apache.cordova.PluginManager: boolean shouldAllowNavigation(java.lang.String)>(java.lang.String)
<org.apache.cordova.PluginManager: boolean shouldAllowRequest(java.lang.String)>(java.lang.String)
<org.apache.cordova.PluginManager: java.lang.Boolean shouldOpenExternalUrl(java.lang.String)>(java.lang.String)
<org.apache.cordova.Config: void init(android.app.Activity)>(android.app.Activity)
<org.apache.cordova.CordovaPreferences: boolean contains(java.lang.String)>(java.lang.String)
<org.apache.cordova.CordovaPreferences: boolean getBoolean(java.lang.String,boolean)>(java.lang.String, boolean)
<org.apache.cordova.CordovaPreferences: double getDouble(java.lang.String,double)>(java.lang.String, double)
<org.apache.cordova.CordovaPreferences: int getInteger(java.lang.String,int)>(java.lang.String, int)
<org.apache.cordova.CordovaPreferences: java.lang.String getString(java.lang.String,java.lang.String)>(java.lang.String, java.lang.String)
<org.apache.cordova.CordovaPreferences: void set(java.lang.String,double)>(java.lang.String, double)
<org.apache.cordova.CordovaPreferences: void set(java.lang.String,int)>(java.lang.String, int)
<org.apache.cordova.CordovaPreferences: void set(java.lang.String,java.lang.String)>(java.lang.String, java.lang.String)
<org.apache.cordova.CordovaPreferences: void set(java.lang.String,boolean)>(java.lang.String, boolean)
<org.apache.cordova.CordovaPreferences: void setPreferencesBundle(android.os.Bundle)>(android.os.Bundle)
<org.apache.cordova.CallbackMap: android.util.Pair getAndRemoveCallback(int)>(int)
<org.apache.cordova.CallbackMap: int registerCallback(org.apache.cordova.CordovaPlugin,int)>(org.apache.cordova.CordovaPlugin, int)
<org.apache.cordova.ResumeCallback: void <init>(java.lang.String,org.apache.cordova.PluginManager)>(java.lang.String, org.apache.cordova.PluginManager)
<org.apache.cordova.ResumeCallback: void sendPluginResult(org.apache.cordova.PluginResult)>(org.apache.cordova.PluginResult)
<org.apache.cordova.ICordovaClientCertRequest: void proceed(java.security.PrivateKey,java.security.cert.X509Certificate[])>(java.security.PrivateKey, java.security.cert.X509Certificate())
<org.apache.cordova.CoreAndroid: java.lang.Object getBuildConfigValue(android.content.Context,java.lang.String)>(android.content.Context, java.lang.String)
<org.apache.cordova.CoreAndroid: void sendEventMessage(java.lang.String)>(java.lang.String)
<org.apache.cordova.CoreAndroid: void sendEventMessage(org.apache.cordova.PluginResult)>(org.apache.cordova.PluginResult)
<org.apache.cordova.CoreAndroid: boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.CallbackContext)>(java.lang.String, org.json.JSONArray, org.apache.cordova.CallbackContext)
<org.apache.cordova.CoreAndroid: void fireJavascriptEvent(java.lang.String)>(java.lang.String)
<org.apache.cordova.CoreAndroid: void loadUrl(java.lang.String,org.json.JSONObject)>(java.lang.String, org.json.JSONObject)
<org.apache.cordova.CoreAndroid: void overrideBackbutton(boolean)>(boolean)
<org.apache.cordova.CoreAndroid: void overrideButton(java.lang.String,boolean)>(java.lang.String, boolean)
<org.apache.cordova.CoreAndroid: void sendResumeEvent(org.apache.cordova.PluginResult)>(org.apache.cordova.PluginResult)
<org.apache.cordova.PluginEntry: void <init>(java.lang.String,java.lang.String,boolean)>(java.lang.String, java.lang.String, boolean)
<org.apache.cordova.PluginEntry: void <init>(java.lang.String,java.lang.String,boolean,org.apache.cordova.CordovaPlugin)>(java.lang.String, java.lang.String, boolean, org.apache.cordova.CordovaPlugin)
<org.apache.cordova.PluginEntry: void <init>(java.lang.String,org.apache.cordova.CordovaPlugin)>(java.lang.String, org.apache.cordova.CordovaPlugin)
<org.apache.cordova.ICordovaHttpAuthHandler: void proceed(java.lang.String,java.lang.String)>(java.lang.String, java.lang.String)
<org.apache.cordova.PluginResult: org.apache.cordova.PluginResult getMultipartMessage(int)>(int)
<org.apache.cordova.PluginResult: void setKeepCallback(boolean)>(boolean)
<org.apache.cordova.PluginResult: java.lang.String toCallbackString(java.lang.String)>(java.lang.String)
<org.apache.cordova.PluginResult: java.lang.String toErrorCallbackString(java.lang.String)>(java.lang.String)
<org.apache.cordova.PluginResult: java.lang.String toSuccessCallbackString(java.lang.String)>(java.lang.String)
<org.apache.cordova.NativeToJsMessageQueue: void addJavaScript(java.lang.String)>(java.lang.String)
<org.apache.cordova.NativeToJsMessageQueue: void addPluginResult(org.apache.cordova.PluginResult,java.lang.String)>(org.apache.cordova.PluginResult, java.lang.String)
<org.apache.cordova.NativeToJsMessageQueue: java.lang.String popAndEncode(boolean)>(boolean)
<org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)>(int)
<org.apache.cordova.NativeToJsMessageQueue: void setPaused(boolean)>(boolean)
<org.apache.cordova.CordovaInterfaceImpl: void <init>(android.app.Activity)>(android.app.Activity)
<org.apache.cordova.CordovaInterfaceImpl: void <init>(android.app.Activity,java.util.concurrent.ExecutorService)>(android.app.Activity, java.util.concurrent.ExecutorService)
<org.apache.cordova.CordovaInterfaceImpl: boolean hasPermission(java.lang.String)>(java.lang.String)
<org.apache.cordova.CordovaInterfaceImpl: boolean onActivityResult(int,int,android.content.Intent)>(int, int, android.content.Intent)
<org.apache.cordova.CordovaInterfaceImpl: void onCordovaInit(org.apache.cordova.PluginManager)>(org.apache.cordova.PluginManager)
<org.apache.cordova.CordovaInterfaceImpl: java.lang.Object onMessage(java.lang.String,java.lang.Object)>(java.lang.String, java.lang.Object)
<org.apache.cordova.CordovaInterfaceImpl: void onRequestPermissionResult(int,java.lang.String[],int[])>(int, java.lang.String(), int())
<org.apache.cordova.CordovaInterfaceImpl: void onSaveInstanceState(android.os.Bundle)>(android.os.Bundle)
<org.apache.cordova.CordovaInterfaceImpl: void requestPermission(org.apache.cordova.CordovaPlugin,int,java.lang.String)>(org.apache.cordova.CordovaPlugin, int, java.lang.String)
<org.apache.cordova.CordovaInterfaceImpl: void requestPermissions(org.apache.cordova.CordovaPlugin,int,java.lang.String[])>(org.apache.cordova.CordovaPlugin, int, java.lang.String())
<org.apache.cordova.CordovaInterfaceImpl: void restoreInstanceState(android.os.Bundle)>(android.os.Bundle)
<org.apache.cordova.CordovaInterfaceImpl: void setActivityResultCallback(org.apache.cordova.CordovaPlugin)>(org.apache.cordova.CordovaPlugin)
<org.apache.cordova.CordovaInterfaceImpl: void setActivityResultRequestCode(int)>(int)
<org.apache.cordova.CordovaInterfaceImpl: void startActivityForResult(org.apache.cordova.CordovaPlugin,android.content.Intent,int)>(org.apache.cordova.CordovaPlugin, android.content.Intent, int)
<org.apache.cordova.CordovaClientCertRequest: void <init>(android.webkit.ClientCertRequest)>(android.webkit.ClientCertRequest)
<org.apache.cordova.CordovaClientCertRequest: void proceed(java.security.PrivateKey,java.security.cert.X509Certificate[])>(java.security.PrivateKey, java.security.cert.X509Certificate())
<org.apache.cordova.CordovaResourceApi: void <init>(android.content.Context,org.apache.cordova.PluginManager)>(android.content.Context, org.apache.cordova.PluginManager)
<org.apache.cordova.CordovaResourceApi: void assertNonRelative(android.net.Uri)>(android.net.Uri)
<org.apache.cordova.CordovaResourceApi: java.lang.String getDataUriMimeType(android.net.Uri)>(android.net.Uri)
<org.apache.cordova.CordovaResourceApi: java.lang.String getMimeTypeFromPath(java.lang.String)>(java.lang.String)
<org.apache.cordova.CordovaResourceApi: int getUriType(android.net.Uri)>(android.net.Uri)
<org.apache.cordova.CordovaResourceApi: void copyResource(android.net.Uri,android.net.Uri)>(android.net.Uri, android.net.Uri)
<org.apache.cordova.CordovaResourceApi: void copyResource(android.net.Uri,java.io.OutputStream)>(android.net.Uri, java.io.OutputStream)
<org.apache.cordova.CordovaResourceApi: java.net.HttpURLConnection createHttpConnection(android.net.Uri)>(android.net.Uri)
<org.apache.cordova.CordovaResourceApi: java.lang.String getMimeType(android.net.Uri)>(android.net.Uri)
<org.apache.cordova.CordovaResourceApi: java.io.File mapUriToFile(android.net.Uri)>(android.net.Uri)
<org.apache.cordova.CordovaResourceApi: java.io.OutputStream openOutputStream(android.net.Uri)>(android.net.Uri)
<org.apache.cordova.CordovaResourceApi: java.io.OutputStream openOutputStream(android.net.Uri,boolean)>(android.net.Uri, boolean)
<org.apache.cordova.CordovaResourceApi: java.lang.String remapPath(java.lang.String)>(java.lang.String)
<org.apache.cordova.CordovaResourceApi: android.net.Uri remapUri(android.net.Uri)>(android.net.Uri)
<org.apache.cordova.CordovaResourceApi: void setThreadCheckingEnabled(boolean)>(boolean)
<org.apache.cordova.ConfigXmlParser: void setStartUrl(java.lang.String)>(java.lang.String)
<org.apache.cordova.ConfigXmlParser: void handleEndTag(org.xmlpull.v1.XmlPullParser)>(org.xmlpull.v1.XmlPullParser)
<org.apache.cordova.ConfigXmlParser: void handleStartTag(org.xmlpull.v1.XmlPullParser)>(org.xmlpull.v1.XmlPullParser)
<org.apache.cordova.ConfigXmlParser: void parse(android.content.Context)>(android.content.Context)
<org.apache.cordova.ConfigXmlParser: void parse(org.xmlpull.v1.XmlPullParser)>(org.xmlpull.v1.XmlPullParser)
<org.apache.cordova.AuthenticationToken: void setPassword(java.lang.String)>(java.lang.String)
<org.apache.cordova.AuthenticationToken: void setUserName(java.lang.String)>(java.lang.String)
<org.apache.cordova.CordovaDialogsHelper: void <init>(android.content.Context)>(android.content.Context)
